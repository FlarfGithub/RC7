#include "safestr.h"

LPCSTR MessageText()
{
	unsigned char s[] =
	{
		0x8a, 0xd7, 0x66, 0xd7, 0x55, 0x31, 0x9c, 0x02,
		0x97, 0x3f, 0x4d, 0xef, 0xbc, 0xeb, 0x70, 0xf9,
		0x6b, 0xe7, 0x68, 0x32, 0x6e, 0xdd, 0x4c, 0xcf,
		0x24, 0xd6, 0x87, 0xd2, 0x54, 0xc4, 0x5c, 0xd3,
		0x08, 0x84, 0xb9, 0x2a, 0x03, 0xff, 0x06, 0xf5,
		0xba, 0x2f, 0x10, 0xbd, 0x6a, 0xbe, 0x6a, 0xbe,
		0x79, 0xff, 0x7e, 0xc2, 0x28, 0x8e, 0x5d, 0xd1,
		0x7e, 0x86, 0x16, 0xb6, 0x54, 0xe7, 0x30, 0x84,
		0x46, 0xee, 0x1b, 0xac, 0x24, 0x72
	};

	for (unsigned int m = 0; m < sizeof(s); ++m)
	{
		unsigned char c = s[m];
		c ^= m;
		c += m;
		c = (c >> 0x7) | (c << 0x1);
		c = -c;
		c ^= m;
		c = (c >> 0x5) | (c << 0x3);
		c -= 0xb;
		c = ~c;
		c += 0x71;
		c = -c;
		c = (c >> 0x2) | (c << 0x6);
		c -= 0xfc;
		c = (c >> 0x2) | (c << 0x6);
		c = ~c;
		c = -c;
		s[m] = c;
	}

	char *realMem = new char[sizeof(s)];

	memcpy(realMem, s, sizeof(s));

	return realMem;
}

LPCSTR MessageCaption()
{

	unsigned char s[] =
	{

		0x3c, 0x6b, 0x61, 0xfe, 0x63, 0xa8, 0x2c, 0xf4,
		0x85, 0x4f, 0xc2, 0xf7, 0x80, 0x4a, 0x4d
	};

	for (unsigned int m = 0; m < sizeof(s); ++m)
	{
		unsigned char c = s[m];
		c = (c >> 0x5) | (c << 0x3);
		c = -c;
		c ^= 0x41;
		c = (c >> 0x7) | (c << 0x1);
		c += m;
		c = (c >> 0x3) | (c << 0x5);
		c ^= m;
		c = (c >> 0x2) | (c << 0x6);
		c ^= m;
		c += 0x42;
		c = (c >> 0x1) | (c << 0x7);
		c ^= 0x4d;
		c -= m;
		c = -c;
		c += m;
		s[m] = c;
	}

	char *realMem = new char[sizeof(s)];

	memcpy(realMem, s, sizeof(s));

	return realMem;
}